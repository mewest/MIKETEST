Waveform Version History readme file
May 2007
    - Added the old functionality of subtime to the extract routine.  Now,
      passing a vector of times or indeces will return a series of snippets
      of the waveform data.
    - Added the uminus function.  This allows you to flip a waveform.

April, 2007
    - Fixed problem with hilberts only updating the last waveform

4/4/2007    version 1.07
    Update waveform/get DURATION_EPOCH to just convert seconds rather than
        call mep2dep.
    Updated waveform/align to fix error where data shifted was in wrong
        direction.
    Updated waveform/waveform to fix error when loading from alt directory.
        Also, updated the winston access (usgs.jar) instead instead of colt
        etc...
    Updated waveform/load_waveform to get calibrations from the same
        database from which the waveform was loaded (instead of from master
        stations).  Also improved history tracking of calibrations


Feb 27, 2007
    -   Modified waveform (load_waveform)
    	to apply calibrations upon loading (if they exist)

    -   fixed glitch in the duration of waveforms (waveform/get), brought 
        about by 0000/00/01 being equivelent to 0000/01/01.  Now, instead 
        of years/months/days it will only show #days.  Also, a rounding 
        glitch that makes seconds sometimes overreport.

    -   fixed a warning message when plotting using the 'xunit'  value of 
        'date'

    -   extract: fixed potential error when retrieving a blank waveform

A zipped version of the most recent CMO (Celso's Matlab Objects) suite, including WAVEFORM, SPECTRALOBJECT, and FILTEROBJECT will be maintained at
http://kiska.giseis.alaska.edu/Input/celso/matlabweb/waveform_suite/waveform.htm



Online tutorials about waveform objects (may be outdated)
http://kiska.giseis.alaska.edu/Input/celso/matlabweb/waveform_suite/waveform.htm


Waveform objects (@waveform/)have gone through several itterations, originating with some scripts commonly run by Jackie Kaplan-Auerbach.  It was designed to work in conjunction with spectral objects (@spectralobject/) and filter objects (@filterobject/) to make waveform manipulation in matlab easy.


%--------------------------------------------------------%
%   Current Version
%--------------------------------------------------------%
VERSION 1.0 : Major overhaul of the waveform suite

 - SUITE_STUFF has been eliminated.  The global variables declared within SUITE_STUFF have been    moved to the constructor methods (ie.  for a waveform object, the appropriate global variables
   now exist in the @waveform/waveform function)

 - Waveform objects now have history tracking.  actions altering the waveform object are noted
	in field called HISTORY
	* history is  controlled in @waveform/waveform by the global variable WAVEFORM_HISTORY
	  which can have either have a logical value of either "true" or "false"
		(no quotes, all lowercase, see HELP LOGICAL for more details)
	* to apend a note to the waveform, use addHistory
	* to reset the history for a waveform, use clearHistory
	* to access a waveform's history use either get(w,'HISTORY') or history(w)

 - Many methods can handle arbitrarily sized waveform objects; that is, an N-dimensional waveform array.

 - USER DEFINED FIELDS have been added.  
	* To create a field in a waveform, use waveform/addfield
	* Thereafer, you can access and set these fields using waveform/get and waveform/set
	* Delete a field using waveform/delfield



%--------------------------------------------------------%
%    Mathamatical operators:
%--------------------------------------------------------%
plus (+) 
minus (-) 
times (.*)
rdivide (./)
power (^)

These functions act upon the data within the waveform objects
Except for power, all behave the same. 
For the following examples:
 let W and Wn be a waveform objects
 let S be a scalar
 let V be a vector

for:  W + S, W - S, W .* S, W ./ S, and W^S
	each data sample within W is added/subtracted/multiplied/divided by S
for:  W + V, W - V, W .* V, W ./ V
	each element of V is combined with each data sample of W in order.  ie.,
	the first element of V is added to the first data point of W, the second 
	element of v is added to the second data point, etc...
for:  W + Wn, W - Wn, W .* Wn, W ./ Wn
	as above, with each sample in W being compared to the equivelent sample in Wn

The answer to all these is returned in a waveform object

%--------------------------------------------------------%
%    User Defined Field related functions:
%--------------------------------------------------------%
addField
delField
get


%--------------------------------------------------------%
%    Functions that access the antelope database:
%--------------------------------------------------------%
get_response
get_spectra
grab_responses
lookupunits
private/load_waveform

